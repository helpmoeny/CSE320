

Lab Exercise #2 -- Combinational Circuits (Instructor's Notes)

B. Boolean Functions and Combinational Circuits

1. The file "~cse320/Labs/lab02.circuit.c" contains a C++ module which
simulates a four-variable, one-output Boolean function.

a) Bring the function into simulation using the UNIX command:

   <prompt> sim ~cse320/Labs/lab02.circuit.c

b) Experiment with the switches and fill in the following table which
describes the behavior of the function.

   Inputs      Output
   a b c d    (0 or 1)

   0 0 0 0    ____0___
   0 0 0 1    ____0___
   0 0 1 0    ____0___
   0 0 1 1    ____0___
   0 1 0 0    ____1___
   0 1 0 1    ____0___
   0 1 1 0    ____0___
   0 1 1 1    ____0___
   1 0 0 0    ____1___
   1 0 0 1    ____1___
   1 0 1 0    ____1___
   1 0 1 1    ____1___
   1 1 0 0    ____1___
   1 1 0 1    ____0___
   1 1 1 0    ____0___
   1 1 1 1    ____0___


c) Give an algebraic expression for the function:

   F(a,b,c,d) = a'bc'd' + ab'c'd' + ab'c'd + ab'cd' + ab'cd + abc'd'


d) Is the function minimized?  Explain.

   No, there are several terms that can be combined.  For example:

     ab'c'd' + ab'c'd = ab'c'(d'+d) = ab'c'(1) = ab'c'


e) Complete the following table to show the Karnaugh map for function F.

     F  | c'd'| c'd | cd  | cd' |
   -----+-----+-----+-----+-----+
   a'b' |  0  |  0  |  0  |  0  |
        +-----+-----+-----+-----+   Note:  unable to show covers in
   a'b  |  1  |  0  |  0  |  0  |   ASCII text file.
        +-----+-----+-----+-----+
   ab   |  1  |  0  |  0  |  0  |
        +-----+-----+-----+-----+
   ab'  |  1  |  1  |  1  |  1  |
        +-----+-----+-----+-----+


f) Give a minimized expression for the function.

   F(a,b,c,d) = ab' + bc'd'


2. Consider the Boolean functions F1 and F2 below:

   F1 = a + b'          /* a or not b */

   F2 = a + a'b'        /* a or (not a and not b) */

Each function has two inputs and one output.

a) Develop a "sim" module that simulates F1 and F2 simultaneously.  Each
function must have its own output Probe but they must share input Switches.

b) Execute the "sim" package to test your implementation of F1 and F2, then
complete the following table:

   a  b       F1      F2

   0  0      __1_    __1_
   0  1      __0_    __0_
   1  0      __1_    __1_
   1  1      __1_    __1_

            
c) In a few words, what do you notice when you compare functions F1 and F2?

  Functions F1 and F2 are equivalent:  they produce the same output for
  all input combinations.

  Function F1 is minimized; Function F2 is not minimized.

